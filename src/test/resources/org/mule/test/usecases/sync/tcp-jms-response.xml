<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:spring="http://www.springframework.org/schema/beans" xmlns:tcp="http://www.mulesoft.org/schema/mule/tcp"
    xmlns:jms="http://www.mulesoft.org/schema/mule/jms"
    xsi:schemaLocation="
               http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
               http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/3.2/mule.xsd
               http://www.mulesoft.org/schema/mule/tcp http://www.mulesoft.org/schema/mule/tcp/3.2/mule-tcp.xsd
               http://www.mulesoft.org/schema/mule/jms http://www.mulesoft.org/schema/mule/jms/3.2/mule-jms.xsd">

    <tcp:connector name="tcpConnector" keepSendSocketOpen="true">
        <tcp:direct-protocol payloadOnly="true" />
    </tcp:connector>

    <jms:activemq-connector name="jmsConnector" specification="1.1" />

    <jms:jmsmessage-to-object-transformer name="jmsmessage-to-object" />
    <byte-array-to-object-transformer name="bytearray-to-object" />

    <model name="model">

        <service name="TcpReceiver">
            <inbound>
                <inbound-endpoint address="tcp://localhost:4444" exchange-pattern="request-response" />
            </inbound>
            <component class="org.mule.component.simple.EchoComponent" />
            <outbound>
                <pass-through-router>
                    <outbound-endpoint address="jms://queue_in" exchange-pattern="one-way"/>
                    <reply-to address="jms://queue_out" />
                </pass-through-router>
            </outbound>
            <async-reply>
                <inbound-endpoint address="jms://queue_out" exchange-pattern="one-way"/>
                <single-async-reply-router/>
            </async-reply>
        </service>

        <service name="JMSReplyProvider">
            <inbound>
                <inbound-endpoint address="jms://queue_in" exchange-pattern="one-way">
                    <transformer ref="jmsmessage-to-object" />
                    <transformer ref="bytearray-to-object" />
                </inbound-endpoint>
            </inbound>
            <component>
                <singleton-object class="org.mule.tck.testmodels.services.TestReceiver" />
            </component>
        </service>
    </model>

</mule>
