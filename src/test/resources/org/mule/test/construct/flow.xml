<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:spring="http://www.springframework.org/schema/beans" xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
    xmlns:script="http://www.mulesoft.org/schema/mule/scripting"
    xmlns:test="http://www.mulesoft.org/schema/mule/test"
        xsi:schemaLocation="
               http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
               http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/3.0/mule.xsd
               http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/3.0/mule-scripting.xsd
               http://www.mulesoft.org/schema/mule/test http://www.mulesoft.org/schema/mule/test/3.0/mule-test.xsd
               http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/3.0/mule-vm.xsd">


    <composite-processor name="composite1">
        <description>Composite thats appands 'ayz'</description>
        <append-string-transformer message="x" />
        <append-string-transformer message="y" />
        <append-string-transformer message="z" />
    </composite-processor>

    <flow name="flow">
        <vm:inbound-endpoint path="in" exchange-pattern="request-response" />
        <append-string-transformer message="1" />
        <append-string-transformer message="2" />
        <processor ref="composite1" />
        <composite-processor>
            <append-string-transformer message="a" />
            <append-string-transformer message="b" />
            <append-string-transformer message="c" />
        </composite-processor>
        <append-string-transformer message="3" />
        <default-service-exception-strategy />
    </flow>

    <flow name="flow2">
        <composite-source>
            <vm:inbound-endpoint path="in2" exchange-pattern="request-response" />
            <vm:inbound-endpoint path="in3" exchange-pattern="request-response" />
        </composite-source>
        <append-string-transformer message="1" />
        <processor ref="composite1" />
    </flow>

    <flow name="inout">
        <vm:inbound-endpoint path="inout-in" exchange-pattern="one-way" />
        <vm:outbound-endpoint path="inout-out" exchange-pattern="one-way" />
    </flow>

    <flow name="inout-append">
        <vm:inbound-endpoint path="inout-append-in" exchange-pattern="one-way" />
        <append-string-transformer message="inout" />
        <vm:outbound-endpoint path="inout-append-out" exchange-pattern="one-way" />
    </flow>

    <flow name="split-aggregate">
        <vm:inbound-endpoint path="split-aggregate-in" exchange-pattern="one-way" />
        <splitter evaluator="bean" expression="fruit" enableCorrelation="ALWAYS" />
        <script:transformer>
            <script:script engine="groovy">
                ((org.mule.tck.testmodels.fruit.Fruit)payload).bite();
                return payload;
            </script:script>
        </script:transformer>
        <collection-aggregator />
        <vm:outbound-endpoint path="split-aggregate-out" exchange-pattern="one-way" />
    </flow>
    
    <flow name="split-aggregate-list">
        <vm:inbound-endpoint path="split-aggregate-list-in" exchange-pattern="one-way" />
        <collection-splitter enableCorrelation="IF_NOT_SET" />
        <script:transformer>
            <script:script engine="groovy">
                ((org.mule.tck.testmodels.fruit.Fruit)payload).bite();
                return payload;
            </script:script>
        </script:transformer>
        <collection-aggregator />
        <vm:outbound-endpoint path="split-aggregate-list-out" exchange-pattern="one-way" />
    </flow>

    <flow name="split-filter-aggregate">
        <vm:inbound-endpoint path="split-filter-aggregate-in" exchange-pattern="one-way" />
        <splitter evaluator="bean" expression="fruit" enableCorrelation="ALWAYS" />
        <not-filter>
            <or-filter>
                <payload-type-filter expectedType="org.mule.tck.testmodels.fruit.Banana" />
                <payload-type-filter expectedType="org.mule.tck.testmodels.fruit.Orange" />
            </or-filter>
        </not-filter>
        <collection-aggregator failOnTimeout="false" timeout="1000" />
        <vm:outbound-endpoint path="split-filter-aggregate-out" exchange-pattern="one-way" />
    </flow>
    
    <flow name="message-chunk-split-aggregate">
        <vm:inbound-endpoint path="message-chunk-split-aggregate-in" exchange-pattern="one-way" />
        <message-chunk-splitter messageSize="20" enableCorrelation="ALWAYS"/>
        <message-chunk-aggregator />
        <vm:outbound-endpoint path="message-chunk-split-aggregate-out" exchange-pattern="one-way" />
    </flow>

    <flow name="component">
        <vm:inbound-endpoint path="components" exchange-pattern="request-response" />
        <echo-component/>
        <test:component appendString="test"/>
        <log-component/>
    </flow>
    
    <flow name="wiretap">
        <vm:inbound-endpoint path="wiretap-in" exchange-pattern="one-way" />
        <append-string-transformer message="in" />
        <wire-tap>
            <composite-processor>
                <append-string-transformer message="tap" />
                <vm:outbound-endpoint path="wiretap-tap" exchange-pattern="one-way" />
            </composite-processor>
            <payload-type-filter expectedType="java.lang.String"/>
        </wire-tap>
        <append-string-transformer message="out" />
        <vm:outbound-endpoint path="wiretap-out" exchange-pattern="one-way" />
    </flow>
    


</mule>
