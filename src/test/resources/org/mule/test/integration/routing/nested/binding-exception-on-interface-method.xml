<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:spring="http://www.springframework.org/schema/beans" 
    xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
    xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/3.0/mule.xsd
       http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/3.0/mule-vm.xsd">

    <vm:connector name="vmConnector"/>

    <model>
        <service name="HelloComponent">
            <inbound>
                <inbound-endpoint address="vm://hello.in" />
            </inbound>
            <component class="org.mule.test.integration.routing.nested.BindingExceptionOnInterfaceMethodTestCase$ExceptionThrowingService" />
            
            <!-- No need to log the exceptions happening in the component - we know there will be one -->
            <custom-exception-strategy class="org.mule.tck.functional.QuietExceptionStrategy"/>
        </service>

        <service name="InvokerComponent">
            <inbound>
                <vm:inbound-endpoint path="invoker.in" synchronous="true"/>
            </inbound>
            <component>
                <singleton-object class="org.mule.test.integration.routing.nested.BindingExceptionOnInterfaceMethodTestCase$Component" />
                <binding interface="org.mule.test.integration.routing.nested.BindingExceptionOnInterfaceMethodTestCase$BindigInterface">
                    <outbound-endpoint address="vm://hello.in" synchronous="true" />
                </binding>
            </component>
            <outbound>
                <pass-through-router>
                    <vm:outbound-endpoint path="invoker.out" />
                </pass-through-router>
            </outbound>
        </service>
    </model>
</mule>
