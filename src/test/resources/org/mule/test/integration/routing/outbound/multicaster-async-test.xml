<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesource.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:spring="http://www.springframework.org/schema/beans"
      xmlns:vm="http://www.mulesource.org/schema/mule/vm"
      xmlns:test="http://www.mulesource.org/schema/mule/test"
      xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       http://www.mulesource.org/schema/mule/core http://www.mulesource.org/schema/mule/core/3.0/mule.xsd
       http://www.mulesource.org/schema/mule/test http://www.mulesource.org/schema/mule/test/3.0/mule-test.xsd
       http://www.mulesource.org/schema/mule/vm http://www.mulesource.org/schema/mule/vm/3.0/mule-vm.xsd">

    <vm:connector name="vm" queueEvents="true"/>

    <model name="test">
        <service name="Distributor">
            <inbound>
                <vm:inbound-endpoint path="distributor.queue"/>
            </inbound>
            <outbound>
                <!-- FruitBowl.getFruit() List -->
                <multicasting-router>
                    <vm:outbound-endpoint path="service1.queue"/>
                    <vm:outbound-endpoint path="service2.queue"/>
                    <vm:outbound-endpoint path="service3.queue"/>
                </multicasting-router>
            </outbound>
        </service>

        <service name="ServiceOne">
            <inbound>
                <vm:inbound-endpoint path="service1.queue"/>
            </inbound>
            <test:component>
                <test:return-data>#[function:shortPayloadClass] Received in #[mule:context.serviceName]</test:return-data>
            </test:component>
            <outbound>
                <pass-through-router>
                    <vm:outbound-endpoint path="collector.queue"/>
                </pass-through-router>
            </outbound>
        </service>

        <service name="ServiceTwo">
            <inbound>
                <vm:inbound-endpoint path="service2.queue"/>
            </inbound>
            <test:component>
                <test:return-data>#[function:shortPayloadClass] Received in #[mule:context.serviceName]</test:return-data>
            </test:component>
            <outbound>
                <pass-through-router>
                    <vm:outbound-endpoint path="collector.queue"/>
                </pass-through-router>
            </outbound>
        </service>

        <service name="ServiceThree">
            <inbound>
                <vm:inbound-endpoint path="service3.queue"/>
            </inbound>
            <test:component>
                <test:return-data>#[function:shortPayloadClass] Received in #[mule:context.serviceName]</test:return-data>
            </test:component>
            <outbound>
                <pass-through-router>
                    <vm:outbound-endpoint path="collector.queue"/>
                </pass-through-router>
            </outbound>
        </service>
    </model>
</mule>
