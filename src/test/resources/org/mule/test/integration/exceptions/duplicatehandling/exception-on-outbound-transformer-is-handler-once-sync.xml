<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:spring="http://www.springframework.org/schema/beans"
      xmlns:mule="http://www.mulesoft.org/schema/mule/core"
      xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
      xmlns:script="http://www.mulesoft.org/schema/mule/scripting"
      xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/3.0/mule-vm.xsd
       http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/3.0/mule-scripting.xsd
       http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/3.0/mule.xsd">

    <script:transformer name="exceptionTransformer">
        <script:script engine="groovy">
            throw new org.mule.api.transformer.TransformerException(org.mule.config.i18n.MessageFactory.createStaticMessage("dummyException"));
        </script:script>
    </script:transformer>

    <model name="SomeModel">

        <service name="SomeService">
            <inbound>
                <vm:inbound-endpoint path="in" />
            </inbound>
            <outbound>
                <pass-through-router>
                    <vm:outbound-endpoint path="SuccessServiceRequest" exchange-pattern="request-response" transformer-refs="exceptionTransformer" />
                </pass-through-router>
            </outbound>
            <custom-exception-strategy class="org.mule.tck.testmodels.mule.TestExceptionStrategy">
                <spring:property name="testProperty" value="true" />
            </custom-exception-strategy>
        </service>

    </model>

</mule>
