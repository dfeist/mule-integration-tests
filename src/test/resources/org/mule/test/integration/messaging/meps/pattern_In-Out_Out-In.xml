<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesource.org/schema/mule/core/2.2"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:mule="http://www.mulesource.org/schema/mule/core/2.2"
      xmlns:spring="http://www.springframework.org/schema/beans"
      xmlns:vm="http://www.mulesource.org/schema/mule/vm/2.2"
      xmlns:test="http://www.mulesource.org/schema/mule/test/2.2"
      xmlns:script="http://www.mulesource.org/schema/mule/scripting/2.2"
      xmlns:jms="http://www.mulesource.org/schema/mule/jms/2.2"
      xsi:schemaLocation="
       http://www.mulesource.org/schema/mule/jms/2.2 http://www.mulesource.org/schema/mule/jms/2.2/mule-jms.xsd
       http://www.mulesource.org/schema/mule/scripting/2.2 http://www.mulesource.org/schema/mule/scripting/2.2/mule-scripting.xsd
       http://www.mulesource.org/schema/mule/test/2.2 http://www.mulesource.org/schema/mule/test/2.2/mule-test.xsd
       http://www.mulesource.org/schema/mule/vm/2.2 http://www.mulesource.org/schema/mule/vm/2.2/mule-vm.xsd
       http://www.mulesource.org/schema/mule/core/2.2 http://www.mulesource.org/schema/mule/core/2.2/mule.xsd
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">

    <!--// START SNIPPET: full-config -->
    <description>
        Receives a message from another party. The service processes the message and then it gets routed via the
        outbound router. The outbound router will wait for a result from the call and will return the result to the
        originating party if one is received. This pattern is analogous to using Remote Sync on a Mule endpoint. If a
        result is not returned from the outbound call an error will be thrown.
    </description>

    <jms:activemq-connector name="amq"/>

    <vm:connector name="vmConnector" queueEvents="true"/>

    <vm:endpoint path="test.inbound" name="inboundEndpoint" synchronous="true"/>

    <jms:endpoint queue="external.app" name="ExternalEndpoint" synchronous="true" responseTimeout="3000"/>

    <model>
        <service name="In-Out_Out-In-Service">
            <inbound>
                <vm:inbound-endpoint ref="inboundEndpoint"/>
            </inbound>
            <script:component>
                <script:script engine="groovy">
                    message.setProperty("bar", "baz")
                    return message
                </script:script>
            </script:component>
            <outbound>
                <pass-through-router>
                    <outbound-endpoint ref="ExternalEndpoint"/>
                    <!-- Mule will automatically listen n this destination when Remote sync is set. If this is not se
                     a temprary destination is set up -->
                    <!--<reply-to address="jms://reply"/>-->
                </pass-through-router>
            </outbound>
        </service>

        <service name="Mock-External-App">
            <inbound>
                <inbound-endpoint ref="ExternalEndpoint"/>
            </inbound>
            <script:component>
                <script:script engine="groovy">
                    message.setProperty("externalApp", "Received")
                    if (message.getProperty("bar") != null)
                        return "bar header received"
                </script:script>
            </script:component>
        </service>
    </model>
    <!--// END SNIPPET: full-config -->
</mule>
