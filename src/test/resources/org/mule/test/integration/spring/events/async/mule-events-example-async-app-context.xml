<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<beans>
    <bean id="jmsConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="vm://localhost"/>
    </bean>

    <!-- the jms server connector config -->
    <bean id="jmsConnector" class="org.mule.providers.jms.JmsConnector">
        <property name="connectionFactory" ref="jmsConnectionFactory"/>
        <property name="specification" value="1.1"/>
    </bean>

    <!-- The Mule implementation of the Spring ApplicationEventMulticaster.  On startup the
application context will look in the container for a bean called applicationEventMulticaster and
register it as the spring context event multicaster  -->
    <bean id="applicationEventMulticaster" class="org.mule.extras.spring.events.MuleEventMulticaster">
        <property name="asynchronous" value="true"/>
    </bean>

    <!-- Our ourderManager bean -->
    <bean id="orderManager" class="org.mule.test.integration.spring.events.async.AsyncOrderManagerBean">
        <property name="subscriptions">
            <list>
                <value>jms://orders.queue</value>
                <!-- <value>pop3://user:password@mail.myrestaurant.com?transformers=EmailMessageToString,StringToOrder</value>-->
                <value>axis:http://localhost:44444/mule/orderManager</value>
            </list>
        </property>
    </bean>


    <!-- <bean id="EmailMessageToString" class="org.mule.providers.email.transformers.EmailMessageToString"/>-->

    <bean id="StringToOrder" class="org.mule.test.integration.spring.events.StringToOrder">
        <property name="returnClass">
            <value>org.mule.test.integration.spring.events.Order</value>
        </property>
    </bean>
</beans>
