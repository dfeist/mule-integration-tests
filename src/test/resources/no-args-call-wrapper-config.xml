<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesource.org/schema/mule/core/2.0"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:spring="http://www.springframework.org/schema/beans"
       xmlns:vm="http://www.mulesource.org/schema/mule/vm/2.0"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
       http://www.mulesource.org/schema/mule/core/2.0 http://www.mulesource.org/schema/mule/core/2.0/mule.xsd
       http://www.mulesource.org/schema/mule/vm/2.0 http://www.mulesource.org/schema/mule/vm/2.0/mule-vm.xsd">

    <vm:connector name="VMConnector" queueEvents="true"/>

    <model name="NoArgsWrapperModel">
        <service name="WrapperUMO">
            <component>
                <pooled-object class="org.mule.components.simple.NoArgsCallWrapper">
                    <properties>
                        <spring:entry key="delegateClass" value="org.mule.tck.testmodels.fruit.Apple"/>
                        <spring:entry key="delegateMethod" value="toString"/>
                    </properties>
                </pooled-object>
            </component>
            <inbound-router>
                <inbound-endpoint address="vm://invoke"/>
            </inbound-router>
            <outbound-router>
                <outbound-pass-through-router>
                    <outbound-endpoint address="vm://out"/>
                </outbound-pass-through-router>
            </outbound-router>
        </service>

        <service name="WrapperUMOInjected">
            <component>
                <pooled-object class="org.mule.components.simple.NoArgsCallWrapper">
                    <properties>
                        <spring:entry key="delegateInstance">
                            <spring:bean name="containerDelegate" class="org.mule.tck.testmodels.fruit.Apple"/>
                        </spring:entry>
                        <spring:entry key="delegateMethod" value="wash"/>
                    </properties>
                    </pooled-object>
            </component>
            <inbound-router>
                <inbound-endpoint address="vm://invokeWithInjected"/>
            </inbound-router>
            <outbound-router>
                <outbound-pass-through-router>
                    <!--
                        don't reuse the output queue, ensure we're the only sender
                        for this one by providing a unique name
                    -->
                    <outbound-endpoint address="vm://outWithInjected"/>
                </outbound-pass-through-router>
            </outbound-router>
        </service>
    </model>
</mule>
