<?xml version="1.0" encoding="UTF-8"?>
<module name="module-global-element"
        minMuleVersion="4.0.0"
        xmlns="http://www.mulesoft.org/schema/mule/module"
        xmlns:mule="http://www.mulesoft.org/schema/mule/core"
        xmlns:httpn="http://www.mulesoft.org/schema/mule/httpn"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="
           http://www.mulesoft.org/schema/mule/module http://www.mulesoft.org/schema/mule/module/current/mule-module.xsd
           http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
           http://www.mulesoft.org/schema/mule/httpn http://www.mulesoft.org/schema/mule/httpn/current/mule-httpn.xsd">

    <property name="someUserConfig" type="string" defaultValue="some-username"/>
    <property name="somePassConfig" type="string" defaultValue="some-password"/>
    <property name="port" type="string"/>
    <!-- Due to the nature some extensions won't support expressions (see usages of org.mule.runtime.api.meta.ExpressionSupport.NOT_SUPPORTED)
    on some attributes, as it happens to be the case with the protocol in the HTTP extension (see org.mule.extension.http.internal.request.RequestConnectionParams.protocol),
    the 'protocolConfig' property is added to show that when macro expanding modules, those parameters (either <property>s or <parameter>s)
    will be replaced with the actual value IF that value is a literal.
    That implies that the protocol using the expression #[properties.protocolConfig] will be replaced by HTTP (default value). -->
    <property name="protocolConfig" type="string" defaultValue="HTTP"/>

    <httpn:request-config name="simple-config" basePath="/basic-auth/">
        <httpn:request-connection host="localhost" protocol="#[properties.protocolConfig]" port="#[properties.port]">
            <httpn:authentication>
                <httpn:basic-authentication username="#[properties.someUserConfig]" password="#[properties.somePassConfig]"/>
            </httpn:authentication>
        </httpn:request-connection>
    </httpn:request-config>

    <operation name="do-login">
        <parameters>
            <parameter name="someUser" type="string" defaultValue="usernameX"/>
            <parameter name="somePass" type="string" defaultValue="passwordX"/>
        </parameters>
        <body>
            <httpn:request config-ref="simple-config" method="GET" path="/{aUser}/{aPass}">
                <httpn:uri-params>
                    #[{"aUser" : parameters.someUser, "aPass" : parameters.somePass}]
                </httpn:uri-params>
            </httpn:request>
            <mule:set-payload value="#['success with basic-authentication for user: ' ++ parameters.someUser]"/>
        </body>
        <output type="string"/>
    </operation>
</module>
