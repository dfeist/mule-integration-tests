<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns="http://www.mulesoft.org/schema/mule/core"
      xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd">


    <flow name="no-expression" initialState="stopped">
        <parse-template>
            <content>${file::org/mule/processors/no-expression.ptem}</content>
        </parse-template>
    </flow>

    <flow name="mel-expression" initialState="stopped">
        <parse-template>
            <content>${file::org/mule/processors/mel-expression.ptem}</content>
        </parse-template>
    </flow>

    <flow name="dw-expression" initialState="stopped">
        <parse-template>
            <content>${file::org/mule/processors/dw-expression.ptem}</content>
        </parse-template>
    </flow>

    <flow name="no-expression-from-location" initialState="stopped">
        <parse-template location="org/mule/processors/no-expression.ptem"/>
    </flow>

    <flow name="mel-expression-from-location" initialState="stopped">
        <parse-template location="org/mule/processors/mel-expression.ptem"/>
    </flow>

    <flow name="dw-expression-from-location" initialState="stopped">
        <parse-template location="org/mule/processors/dw-expression.ptem"/>
    </flow>

    <flow name="no-expression-inline" initialState="stopped">
        <parse-template>
            <content>This template does not have any expressions to parse</content>
        </parse-template>
    </flow>

    <flow name="mel-expression-inline" initialState="stopped">
        <parse-template>
            <content>This template has a MEL expression to parse from #[mel:flowVars.flowName] flow</content>
        </parse-template>
    </flow>

    <flow name="dw-expression-inline" initialState="stopped">
        <parse-template>
            <content>#['This template has a DW expression to parse from ' ++ vars.flowName ++ ' flow. Remember, the name of the flow is $(vars.flowName)']</content>
        </parse-template>
    </flow>

    <flow name="with-target" initialState="stopped">
        <parse-template target="targetVar">
            <content>#['This template has a DW expression to parse from ' ++ vars.flowName ++ ' flow. Remember, the name of the flow is $(vars.flowName)']</content>
        </parse-template>
    </flow>

    <flow name="with-target-value-no-target" initialState="stopped">
        <parse-template targetValue="#[payload]">
            <content>#['This template has a DW expression to parse from ' ++ vars.flowName ++ ' flow. Remember, the name of the flow is $(vars.flowName)']</content>
        </parse-template>
    </flow>

    <flow name="with-custom-target-value" initialState="stopped">
        <parse-template target="targetVar" targetValue="#[payload]">
            <content>#['This template has a DW expression to parse from ' ++ vars.flowName ++ ' flow. Remember, the name of the flow is $(vars.flowName)']</content>
        </parse-template>
    </flow>

    <flow name="with-wrong-target-value" initialState="stopped">
        <parse-template target="targetVar" targetValue="not_an_expression">
            <content>#['This template has a DW expression to parse from ' ++ vars.flowName ++ ' flow. Remember, the name of the flow is $(vars.flowName)']</content>
        </parse-template>
    </flow>

    <flow name="with-message-binding-target-value" initialState="stopped">
        <parse-template target="targetVar" targetValue="#[message]">
            <content>#['This template has a DW expression to parse from ' ++ vars.flowName ++ ' flow. Remember, the name of the flow is $(vars.flowName)']</content>
        </parse-template>
    </flow>

    <flow name="with-payload-from-message-binding-target-value" initialState="stopped">
        <parse-template target="targetVar" targetValue="#[message.payload]">
            <content>#['This template has a DW expression to parse from ' ++ vars.flowName ++ ' flow. Remember, the name of the flow is $(vars.flowName)']</content>
        </parse-template>
    </flow>

    <flow name="nestedExpressionsFlow" initialState="stopped">
        <parse-template>
            <content>Eran #[vars.quantity] #[vars.individuals] que venian de la #[vars.origin]</content>
        </parse-template>
    </flow>

    <flow name="nestedExpressionsFlowFromFile" initialState="stopped">
        <parse-template location="org/mule/processors/song.ptem"/>
    </flow>

</mule>